//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18449
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Finland.Hackathon.ClaimsServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Claim", Namespace="http://schemas.datacontract.org/2004/07/OpenDataService.DataManagement")]
    [System.SerializableAttribute()]
    public partial class Claim : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Finland.Hackathon.ClaimsServiceReference.Car CarField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CarIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClaimTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Finland.Hackathon.ClaimsServiceReference.Gender GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Finland.Hackathon.ClaimsServiceReference.Location LocationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LocationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MunicipalityClaimField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MunicipalityPolicyholderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Finland.Hackathon.ClaimsServiceReference.Product ProductField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoadTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SituationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VenueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Age {
            get {
                return this.AgeField;
            }
            set {
                if ((this.AgeField.Equals(value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Finland.Hackathon.ClaimsServiceReference.Car Car {
            get {
                return this.CarField;
            }
            set {
                if ((object.ReferenceEquals(this.CarField, value) != true)) {
                    this.CarField = value;
                    this.RaisePropertyChanged("Car");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CarId {
            get {
                return this.CarIdField;
            }
            set {
                if ((this.CarIdField.Equals(value) != true)) {
                    this.CarIdField = value;
                    this.RaisePropertyChanged("CarId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClaimType {
            get {
                return this.ClaimTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClaimTypeField, value) != true)) {
                    this.ClaimTypeField = value;
                    this.RaisePropertyChanged("ClaimType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Date {
            get {
                return this.DateField;
            }
            set {
                if ((this.DateField.Equals(value) != true)) {
                    this.DateField = value;
                    this.RaisePropertyChanged("Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Finland.Hackathon.ClaimsServiceReference.Gender Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((this.GenderField.Equals(value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Finland.Hackathon.ClaimsServiceReference.Location Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LocationId {
            get {
                return this.LocationIdField;
            }
            set {
                if ((this.LocationIdField.Equals(value) != true)) {
                    this.LocationIdField = value;
                    this.RaisePropertyChanged("LocationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MunicipalityClaim {
            get {
                return this.MunicipalityClaimField;
            }
            set {
                if ((object.ReferenceEquals(this.MunicipalityClaimField, value) != true)) {
                    this.MunicipalityClaimField = value;
                    this.RaisePropertyChanged("MunicipalityClaim");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MunicipalityPolicyholder {
            get {
                return this.MunicipalityPolicyholderField;
            }
            set {
                if ((object.ReferenceEquals(this.MunicipalityPolicyholderField, value) != true)) {
                    this.MunicipalityPolicyholderField = value;
                    this.RaisePropertyChanged("MunicipalityPolicyholder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Finland.Hackathon.ClaimsServiceReference.Product Product {
            get {
                return this.ProductField;
            }
            set {
                if ((this.ProductField.Equals(value) != true)) {
                    this.ProductField = value;
                    this.RaisePropertyChanged("Product");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoadType {
            get {
                return this.RoadTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RoadTypeField, value) != true)) {
                    this.RoadTypeField = value;
                    this.RaisePropertyChanged("RoadType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Situation {
            get {
                return this.SituationField;
            }
            set {
                if ((object.ReferenceEquals(this.SituationField, value) != true)) {
                    this.SituationField = value;
                    this.RaisePropertyChanged("Situation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Venue {
            get {
                return this.VenueField;
            }
            set {
                if ((object.ReferenceEquals(this.VenueField, value) != true)) {
                    this.VenueField = value;
                    this.RaisePropertyChanged("Venue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Car", Namespace="http://schemas.datacontract.org/2004/07/OpenDataService.DataManagement")]
    [System.SerializableAttribute()]
    public partial class Car : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BrandField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CylinderVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DistanceBetweenAxesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FirstUseDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Finland.Hackathon.ClaimsServiceReference.FuelType FuelTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KilowattsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberOfSeatsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WeightField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WidthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Brand {
            get {
                return this.BrandField;
            }
            set {
                if ((this.BrandField.Equals(value) != true)) {
                    this.BrandField = value;
                    this.RaisePropertyChanged("Brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CylinderVolume {
            get {
                return this.CylinderVolumeField;
            }
            set {
                if ((this.CylinderVolumeField.Equals(value) != true)) {
                    this.CylinderVolumeField = value;
                    this.RaisePropertyChanged("CylinderVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DistanceBetweenAxes {
            get {
                return this.DistanceBetweenAxesField;
            }
            set {
                if ((this.DistanceBetweenAxesField.Equals(value) != true)) {
                    this.DistanceBetweenAxesField = value;
                    this.RaisePropertyChanged("DistanceBetweenAxes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FirstUseDate {
            get {
                return this.FirstUseDateField;
            }
            set {
                if ((this.FirstUseDateField.Equals(value) != true)) {
                    this.FirstUseDateField = value;
                    this.RaisePropertyChanged("FirstUseDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Finland.Hackathon.ClaimsServiceReference.FuelType FuelType {
            get {
                return this.FuelTypeField;
            }
            set {
                if ((this.FuelTypeField.Equals(value) != true)) {
                    this.FuelTypeField = value;
                    this.RaisePropertyChanged("FuelType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Kilowatts {
            get {
                return this.KilowattsField;
            }
            set {
                if ((this.KilowattsField.Equals(value) != true)) {
                    this.KilowattsField = value;
                    this.RaisePropertyChanged("Kilowatts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NumberOfSeats {
            get {
                return this.NumberOfSeatsField;
            }
            set {
                if ((this.NumberOfSeatsField.Equals(value) != true)) {
                    this.NumberOfSeatsField = value;
                    this.RaisePropertyChanged("NumberOfSeats");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Weight {
            get {
                return this.WeightField;
            }
            set {
                if ((this.WeightField.Equals(value) != true)) {
                    this.WeightField = value;
                    this.RaisePropertyChanged("Weight");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Width {
            get {
                return this.WidthField;
            }
            set {
                if ((this.WidthField.Equals(value) != true)) {
                    this.WidthField = value;
                    this.RaisePropertyChanged("Width");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Location", Namespace="http://schemas.datacontract.org/2004/07/OpenDataService.DataManagement")]
    [System.SerializableAttribute()]
    public partial class Location : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LatitudeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LongitudeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Gender", Namespace="http://schemas.datacontract.org/2004/07/OpenDataService.DataManagement")]
    public enum Gender : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Male = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Female = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Undefined = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/OpenDataService.DataManagement")]
    public enum Product : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MTPL = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Casco = 1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FuelType", Namespace="http://schemas.datacontract.org/2004/07/OpenDataService.DataManagement")]
    public enum FuelType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Benzine = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Diesel = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Undefined = 0,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClaimsServiceReference.IClaimsService")]
    public interface IClaimsService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimsService/GetClaimById", ReplyAction="http://tempuri.org/IClaimsService/GetClaimByIdResponse")]
        Finland.Hackathon.ClaimsServiceReference.Claim GetClaimById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimsService/GetClaimById", ReplyAction="http://tempuri.org/IClaimsService/GetClaimByIdResponse")]
        System.Threading.Tasks.Task<Finland.Hackathon.ClaimsServiceReference.Claim> GetClaimByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimsService/GetAccidentTypesByCoordinates", ReplyAction="http://tempuri.org/IClaimsService/GetAccidentTypesByCoordinatesResponse")]
        System.Collections.Generic.Dictionary<string, int> GetAccidentTypesByCoordinates(Finland.Hackathon.ClaimsServiceReference.Location coords, int range);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimsService/GetAccidentTypesByCoordinates", ReplyAction="http://tempuri.org/IClaimsService/GetAccidentTypesByCoordinatesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, int>> GetAccidentTypesByCoordinatesAsync(Finland.Hackathon.ClaimsServiceReference.Location coords, int range);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimsService/GetHourlyStatistics", ReplyAction="http://tempuri.org/IClaimsService/GetHourlyStatisticsResponse")]
        int[] GetHourlyStatistics(string claimType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimsService/GetHourlyStatistics", ReplyAction="http://tempuri.org/IClaimsService/GetHourlyStatisticsResponse")]
        System.Threading.Tasks.Task<int[]> GetHourlyStatisticsAsync(string claimType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimsService/GetDailyStatistics", ReplyAction="http://tempuri.org/IClaimsService/GetDailyStatisticsResponse")]
        int[] GetDailyStatistics(string claimType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimsService/GetDailyStatistics", ReplyAction="http://tempuri.org/IClaimsService/GetDailyStatisticsResponse")]
        System.Threading.Tasks.Task<int[]> GetDailyStatisticsAsync(string claimType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimsService/GetClaimsByCoordinates", ReplyAction="http://tempuri.org/IClaimsService/GetClaimsByCoordinatesResponse")]
        Finland.Hackathon.ClaimsServiceReference.Claim[] GetClaimsByCoordinates(Finland.Hackathon.ClaimsServiceReference.Location coords, int range);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimsService/GetClaimsByCoordinates", ReplyAction="http://tempuri.org/IClaimsService/GetClaimsByCoordinatesResponse")]
        System.Threading.Tasks.Task<Finland.Hackathon.ClaimsServiceReference.Claim[]> GetClaimsByCoordinatesAsync(Finland.Hackathon.ClaimsServiceReference.Location coords, int range);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimsService/GetAddresses", ReplyAction="http://tempuri.org/IClaimsService/GetAddressesResponse")]
        string[] GetAddresses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimsService/GetAddresses", ReplyAction="http://tempuri.org/IClaimsService/GetAddressesResponse")]
        System.Threading.Tasks.Task<string[]> GetAddressesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimsService/WriteLocations", ReplyAction="http://tempuri.org/IClaimsService/WriteLocationsResponse")]
        void WriteLocations(string address, Finland.Hackathon.ClaimsServiceReference.Location uniLocation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimsService/WriteLocations", ReplyAction="http://tempuri.org/IClaimsService/WriteLocationsResponse")]
        System.Threading.Tasks.Task WriteLocationsAsync(string address, Finland.Hackathon.ClaimsServiceReference.Location uniLocation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimsService/GetLocationPacksByData", ReplyAction="http://tempuri.org/IClaimsService/GetLocationPacksByDataResponse")]
        Finland.Hackathon.ClaimsServiceReference.Location[] GetLocationPacksByData(int skipmultiplier);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClaimsService/GetLocationPacksByData", ReplyAction="http://tempuri.org/IClaimsService/GetLocationPacksByDataResponse")]
        System.Threading.Tasks.Task<Finland.Hackathon.ClaimsServiceReference.Location[]> GetLocationPacksByDataAsync(int skipmultiplier);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClaimsServiceChannel : Finland.Hackathon.ClaimsServiceReference.IClaimsService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClaimsServiceClient : System.ServiceModel.ClientBase<Finland.Hackathon.ClaimsServiceReference.IClaimsService>, Finland.Hackathon.ClaimsServiceReference.IClaimsService {
        
        public ClaimsServiceClient() {
        }
        
        public ClaimsServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClaimsServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClaimsServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClaimsServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Finland.Hackathon.ClaimsServiceReference.Claim GetClaimById(int id) {
            return base.Channel.GetClaimById(id);
        }
        
        public System.Threading.Tasks.Task<Finland.Hackathon.ClaimsServiceReference.Claim> GetClaimByIdAsync(int id) {
            return base.Channel.GetClaimByIdAsync(id);
        }
        
        public System.Collections.Generic.Dictionary<string, int> GetAccidentTypesByCoordinates(Finland.Hackathon.ClaimsServiceReference.Location coords, int range) {
            return base.Channel.GetAccidentTypesByCoordinates(coords, range);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<string, int>> GetAccidentTypesByCoordinatesAsync(Finland.Hackathon.ClaimsServiceReference.Location coords, int range) {
            return base.Channel.GetAccidentTypesByCoordinatesAsync(coords, range);
        }
        
        public int[] GetHourlyStatistics(string claimType) {
            return base.Channel.GetHourlyStatistics(claimType);
        }
        
        public System.Threading.Tasks.Task<int[]> GetHourlyStatisticsAsync(string claimType) {
            return base.Channel.GetHourlyStatisticsAsync(claimType);
        }
        
        public int[] GetDailyStatistics(string claimType) {
            return base.Channel.GetDailyStatistics(claimType);
        }
        
        public System.Threading.Tasks.Task<int[]> GetDailyStatisticsAsync(string claimType) {
            return base.Channel.GetDailyStatisticsAsync(claimType);
        }
        
        public Finland.Hackathon.ClaimsServiceReference.Claim[] GetClaimsByCoordinates(Finland.Hackathon.ClaimsServiceReference.Location coords, int range) {
            return base.Channel.GetClaimsByCoordinates(coords, range);
        }
        
        public System.Threading.Tasks.Task<Finland.Hackathon.ClaimsServiceReference.Claim[]> GetClaimsByCoordinatesAsync(Finland.Hackathon.ClaimsServiceReference.Location coords, int range) {
            return base.Channel.GetClaimsByCoordinatesAsync(coords, range);
        }
        
        public string[] GetAddresses() {
            return base.Channel.GetAddresses();
        }
        
        public System.Threading.Tasks.Task<string[]> GetAddressesAsync() {
            return base.Channel.GetAddressesAsync();
        }
        
        public void WriteLocations(string address, Finland.Hackathon.ClaimsServiceReference.Location uniLocation) {
            base.Channel.WriteLocations(address, uniLocation);
        }
        
        public System.Threading.Tasks.Task WriteLocationsAsync(string address, Finland.Hackathon.ClaimsServiceReference.Location uniLocation) {
            return base.Channel.WriteLocationsAsync(address, uniLocation);
        }
        
        public Finland.Hackathon.ClaimsServiceReference.Location[] GetLocationPacksByData(int skipmultiplier) {
            return base.Channel.GetLocationPacksByData(skipmultiplier);
        }
        
        public System.Threading.Tasks.Task<Finland.Hackathon.ClaimsServiceReference.Location[]> GetLocationPacksByDataAsync(int skipmultiplier) {
            return base.Channel.GetLocationPacksByDataAsync(skipmultiplier);
        }
    }
}
